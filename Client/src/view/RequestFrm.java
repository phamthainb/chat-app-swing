/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import control.ClientCtr;
import dto.RequestDTO;
import java.awt.Frame;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import model.ObjectWrapper;
import model.Friend;

/**
 *
 * @author sonht
 */
public class RequestFrm extends javax.swing.JDialog {

    /**
     * Creates new form RequestFrm
     */
    private ClientCtr mySocket;
    private Long id;
    private ArrayList<Friend> requests = new ArrayList<>();
    private Frame parent;

    public RequestFrm(java.awt.Frame parent, boolean modal, ClientCtr mySocket, Long id) {
        super(parent, modal);
        initComponents();
        this.mySocket = mySocket;
        this.id = id;
        this.parent = parent;
        this.mySocket.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_CONFIRM_FRIEND, this));
        this.mySocket.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_GET_REQUESTS, this));
        this.mySocket.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_DECLINE_FRIEND, this));
        this.mySocket.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_ADD_FRIEND, this));
        this.mySocket.getActiveFunction().add(new ObjectWrapper(ObjectWrapper.REPLY_CANCEL_FRIEND, this));

        getRequests();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    void getRequests() {
        this.mySocket.sendData(new ObjectWrapper(ObjectWrapper.GET_REQUESTS, id));
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTbl = new javax.swing.JTable();
        usernameTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Requests");

        requestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Requests"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTblMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(requestTbl);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(usernameTxt)))
                .addContainerGap(172, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameTxt)
                .addContainerGap(264, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void requestTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTblMouseClicked
        int index = requestTbl.getSelectedRow();
        new RequestDetailFrm(parent, rootPaneCheckingEnabled, requests.get(index), mySocket).setVisible(true);
    }//GEN-LAST:event_requestTblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                RequestFrm dialog = new RequestFrm(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void mapToTable() {
        usernameTxt.setText("");

        if (requests.size() >= 0) {
            String columns[] = {"No.", "Username"};
            String[][] values = new String[requests.size()][columns.length];
            for (int i = 0; i < requests.size(); i++) {
                values[i][0] = requests.get(i).getUser_1().getId() + "";
                values[i][1] = requests.get(i).getUser_1().getUsername() + "";
            }
            DefaultTableModel table = new DefaultTableModel(values, columns) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };
            requestTbl.setModel(table);
        }
    }

    public void receivedDataProcessing(ObjectWrapper data) {

        if (data.getPerformative() == ObjectWrapper.REPLY_GET_REQUESTS) {
            this.requests = (ArrayList<Friend>) data.getData();
            mapToTable();
        }

        if (data.getPerformative() == ObjectWrapper.REPLY_ADD_FRIEND
                || data.getPerformative() == ObjectWrapper.REPLY_CONFIRM_FRIEND
                || data.getPerformative() == ObjectWrapper.REPLY_DECLINE_FRIEND
                || data.getPerformative() == ObjectWrapper.REPLY_CANCEL_FRIEND) {
            System.out.println("ADD | CONFIRM | CANCEL | DECLINE");
            getRequests();
            mapToTable();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable requestTbl;
    private javax.swing.JLabel usernameTxt;
    // End of variables declaration//GEN-END:variables
}
